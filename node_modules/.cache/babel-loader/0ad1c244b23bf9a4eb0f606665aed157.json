{"remainingRequest":"D:\\GitHub\\Kup-S.github.io\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Kup-S.github.io\\src\\main.js","dependencies":[{"path":"D:\\GitHub\\Kup-S.github.io\\src\\main.js","mtime":1608012982273},{"path":"D:\\GitHub\\Kup-S.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1607955994291},{"path":"D:\\GitHub\\Kup-S.github.io\\node_modules\\babel-loader\\lib\\index.js","mtime":1607956012138}],"contextDependencies":[],"result":["import \"D:\\\\GitHub\\\\Kup-S.github.io\\\\node_modules\\\\core-js\\\\modules\\\\es6.array.iterator.js\";\nimport \"D:\\\\GitHub\\\\Kup-S.github.io\\\\node_modules\\\\core-js\\\\modules\\\\es6.promise.js\";\nimport \"D:\\\\GitHub\\\\Kup-S.github.io\\\\node_modules\\\\core-js\\\\modules\\\\es6.object.assign.js\";\nimport \"D:\\\\GitHub\\\\Kup-S.github.io\\\\node_modules\\\\core-js\\\\modules\\\\es7.promise.finally.js\";\nimport Vue from 'vue';\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport axios from 'axios';\nimport store from \"./store\"; //vue会自动调用目录下的index.js\n\nVue.config.productionTip = false;\nimport 'element-ui/lib/theme-chalk/index.css';\nimport element from \"./element/index\";\nVue.use(element); // 设置拦截器，在header中插入token\n// axios.interceptors.request.use(\n//   config => {\n//     //在所有请求头部添加token值\n//     const token = store.state.userInfo.token;\n// \tconsole.log(token)\n//     if (token) {\n// \t\t// header 中添加数据\n// \t\t//          数据key  value\n//       config.headers.token = token;\n//     }\n//     return config\n//   },\n//   error => {\n//     return Promise.reject(error)\n//   }\n// );\n\nVue.prototype.$http = axios;\nnew Vue({\n  render: function render(h) {\n    return h(App);\n  },\n  router: router,\n  store: store\n}).$mount('#app');",{"version":3,"sources":["D:\\GitHub\\Kup-S.github.io\\src\\main.js"],"names":["Vue","App","router","axios","store","config","productionTip","element","use","prototype","$http","render","h","$mount"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,gB,CAA4B;;AAC5BJ,GAAG,CAACK,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAEA,OAAO,sCAAP;AACA,OAAOC,OAAP;AACAP,GAAG,CAACQ,GAAJ,CAAQD,OAAR,E,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAP,GAAG,CAACS,SAAJ,CAAcC,KAAd,GAAsBP,KAAtB;AAGA,IAAIH,GAAJ,CAAQ;AACNW,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACX,GAAD,CAAL;AAAA,GADH;AAENC,EAAAA,MAAM,EAANA,MAFM;AAGNE,EAAAA,KAAK,EAALA;AAHM,CAAR,EAIGS,MAJH,CAIU,MAJV","sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport axios from 'axios'\nimport store from './store' //vue会自动调用目录下的index.js\nVue.config.productionTip = false\n\nimport 'element-ui/lib/theme-chalk/index.css'\nimport element from './element/index'\nVue.use(element)\n\n\n// 设置拦截器，在header中插入token\n// axios.interceptors.request.use(\n//   config => {\n//     //在所有请求头部添加token值\n//     const token = store.state.userInfo.token;\n// \tconsole.log(token)\n//     if (token) {\n// \t\t// header 中添加数据\n// \t\t//          数据key  value\n//       config.headers.token = token;\n//     }\n//     return config\n//   },\n//   error => {\n//     return Promise.reject(error)\n//   }\n// );\n\n\nVue.prototype.$http = axios\n\n\nnew Vue({\n  render: h => h(App),\n  router,\n  store\n}).$mount('#app')"]}]}